---
- name: Load variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../ambari-server/vars

- name: Install the ambari-server package
  package:
    name: ambari-server
    update_cache: yes
    state: latest
  notify: Reload systemd

- meta: flush_handlers


- name: Set the Ambari Server Java setup option (OpenJDK)
  set_fact:
    ambari_java_options: "-j {{ openjdk_path }}"
  when: java == "openjdk"

- name: Set the Ambari Server Java setup option (Oracle JDK)
  set_fact:
    ambari_java_options: "-j {{ oraclejdk_options.base_folder }}/latest"
  when: java == "oraclejdk"

- name: Run Ambari Server setup
  shell: /usr/sbin/ambari-server setup -s {{ ambari_java_options|default("") }}
  notify: Restart ambari-server

- name: Increase the Ambari Server startup timeout
  lineinfile:
    path: /etc/ambari-server/conf/ambari.properties
    state: present
    line: 'server.startup.web.timeout=120'
  notify: Restart ambari-server

- meta: flush_handlers

- name: Make sure the ambari-server service is started
  service:
    name: ambari-server
    state: started

- name: Make sure the ambari-server service is enabled
  service:
    name: ambari-server
    enabled: yes
  ignore_errors: true
